version: "3"
services:
  create-order-service:
    image: create-order
    build: ../Create-Order-Service
    environment:
      - BACKEND_DB_IP=create-order-db
      - BACKEND_DB_USERNAME=postgres
      - BACKEND_DB_NAME=create-order
      - BACKEND_DB_PORT=5432
      - BACKEND_DB_PASSWORD=password
      # - OTEL_METRICS_EXPORTER=otlp
      # - OTEL_TRACE_EXPORTER=tempo
      # - OTEL_LOGS_EXPORTER=loki
      # - OTEL_EXPORTER_OLTP_ENDPOINT=http://otel-collector:4317
      # - OTEL_PROPAGATORS=tracecontext,baggage
    depends_on:
      - create-order-db
      - otel-collector
    ports:
      - "8080:8080"
    restart: always
    networks:
      - create-order-db
      - collector

  process-payment-service:
    image: process-payment
    build: ../Process-Payment-Service
    environment:
      - BACKEND_DB_IP=process-payment-db
      - BACKEND_DB_USERNAME=postgres
      - BACKEND_DB_NAME=process-payment
      - BACKEND_DB_PORT=5432
      - BACKEND_DB_PASSWORD=password
    depends_on:
      - process-payment-db
      - otel-collector
    ports:
      - "8081:8080"
    restart: always
    networks:
      - process-payment-db
      - collector

  create-order-db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=create-order
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - create-order-db

  process-payment-db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=process-payment
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    networks:
      - process-payment-db

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    restart: always
    command:
      - --config=/etc/otelcol-cont/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-cont/otel-collector.yml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
    networks:
      - collector

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - collector

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    ports:
      - "3200:3200"
      - "4317"
    networks:
      - collector

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - collector

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - collector

networks:
  create-order-db:
  process-payment-db:
  collector:
